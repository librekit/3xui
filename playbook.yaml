---
- name: Install XUI with SSL
  hosts: all
  become: yes
  vars:
    panel_domain: "{{ external_domain }}"
    panel_username: "admin"
    panel_port: "5678"
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      become: yes

    - name: Upgrade all packages to the latest version
      ansible.builtin.apt:
        name: "*"
        state: latest
      become: yes

    - name: Run the Bash Command to Install XUI with auto-input
      ansible.builtin.shell: |
        curl -o install.sh https://raw.githubusercontent.com/alireza0/x-ui/master/install.sh
        chmod +x install.sh
        bash install.sh 
      register: script_output
      changed_when: false
      ignore_errors: yes
      timeout: 1000

      register: script_output
      changed_when: false
      ignore_errors: yes
      timeout: 1000

      register: script_output
      changed_when: false
      ignore_errors: yes
      timeout: 1000

    - name: Run the Bash Command to Install XUI
      command: "sh -c 'curl -o install.sh https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh && chmod +x install.sh && ./install.sh'"
      register: script_output
      changed_when: false
      ignore_errors: yes
      timeout: 1000  # Set the timeout to 1000 seconds (16 minutes)
    
    - name: Display XUI settings
      command: "/usr/local/x-ui/x-ui setting -show true"
      register: xui_settings_output
      changed_when: false
    
    - name: Output XUI settings
      debug:
        var: xui_settings_output.stdout_lines

    # - name: Ensure snapd is installed
    #   ansible.builtin.apt:
    #     name: snapd
    #     state: present
    #     update_cache: yes

    # - name: Install core via Snap
    #   shell: "snap install core; snap refresh core"

    # - name: Install Certbot via Snap (Classic)
    #   shell: "snap install --classic certbot"

    # - name: Create Symbolic Link for Certbot
    #   ansible.builtin.file:
    #     src: /snap/bin/certbot
    #     dest: /usr/bin/certbot
    #     state: link
    #     force: yes

    # - name: Obtain Let's Encrypt SSL Certificate
    #   shell: "certbot certonly --standalone --register-unsafely-without-email --non-interactive --agree-tos -d {{ panel_domain }}"

    # - name: Display SSL certificate paths
    #   debug:
    #     msg: "IMPORTANT: Copy this to your panel settings to setup the SSL certificate (HTTPS) -> Public Key File Path: /etc/letsencrypt/live/{{ panel_domain }}/cert.pem -> Private Key File Path: /etc/letsencrypt/live/{{ panel_domain }}/privkey.pem"

    # - name: Output XUI settings
    #   debug:
    #     var: xui_settings_output.stdout_lines
